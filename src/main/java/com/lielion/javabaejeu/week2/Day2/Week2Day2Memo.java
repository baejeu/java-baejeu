package com.lielion.javabaejeu.week2.Day2;

public class Week2Day2Memo {
}
/*
string == string
해시 코드?
// str1 의 G와 str2 의 G 는 같은가??
boolean isSame = str1.substring(0, 1) == str2;
System.out.println("isSame = " + isSame);
// str1 의 G와 str2 의 G 의 해시코드
System.out.println("str1.substring(0, 1) 의 해시코드 = " + str1.substring(0, 1).hashCode());
System.out.println("str2 의 해시코드 = " + str2.hashCode());
// 같게 나옴

"Gold"와 new String("Gold")를 .hashCode()로 비교했는데, 서로 동일하게 나옵니다 new String()으로 하면 새로운 객체로 할당받는 게 아닌걸까요?
Heap에 물어보는데 “GOLD”가 있으면 new를 했지만 String@2225280주소를 리턴 합니다.
new를 할  때 새로 생성을 하지 않기 때문에 String을 쓰면 메모리 효율적입니다.


 */

/* 회고 정리
Chapter 04 배열(Array)

배열(Array)은 같은 타입의 여러 값을 한 개의 변수에 저장하기 위해 사용합니다.
한 반에 30명 학생의 점수를 저장하려면 변수가 30개가 필요합니다.
int student1MathScore = 100; // 학생1의 수학 점수 100점
int student2MathScore = 100; // 학생2의 수학 점수 100점
...
int student30MathScore = 100; // 학생30의 수학 점수 100점
하지만 변수 30개를 선언하고 관리하는 것은 쉬운 일이 아닙니다. 그리고 변수가 30개라면 일일이
변수명을 만들고 출력하는 것도 쉽지 않습니다. 이럴 때 배열을 씁니다.

배열 선언하기
배열은 다음과 같이 배열 타입을 정하고 [](대괄호)를 입력하고 그 뒤에 변수명을 정해 선언합니다.
변수 타입[] 변수명;
변수를 선언하는 방법과 비슷하지만 중간에 [](대괄호)가 들어갑니다.
int[] iArr;

변수와 마찬가지로 선언만 한다고 바로 사용할 수 있는 건 아닙니다. 선언을 하고 초기화를 해
주어야 합니다. 초기화는 new 연산자를 이용하고 변수 타입과 개수를 지정합니다.

변수명 = new 변수 타입[개수];
다음은 배열을 선언하고 개수를 다섯 개로 초기화하는 예시입니다.
int[] iArr;
iArr = new int[5];

첫째, 지정한 개수 만큼 메모리 공간을 미리 잡아 놓는다는 것입니다.   길이가 고정이다.
영화관이나 공연장을 지을 때 몇 석 규모로 할 것인지 미리 설계하듯이 배열도 몇 칸을 메모리에 미리
할당해 놓을 것인지 잘 생각해서 지정해야 합니다.

둘째, 이미 선언한 배열의 개수는 바꿀 수 없습니다.
(한 줄 요약) 배열은 크기를 지정해서 선언해야 한다는 것과 선언한 후에는 크기를 바꿀 수 없다는
것을 기억하고 생성해 주세요.

배열을 선언하면서 초기화
변수를 선언할 때와 마찬가지로 배열도 선언하면서 초기화할 수 있습니다. 실제로는 이 방법을 더
많이 사용합니다.
int[] iArr = new int[3]; // 세 칸 배열 생성

근육이 늘어나려면 찢어져야
하나의 밀알이 떨어져 열매를 맺으려면 먼저 썩어서 …




 */






